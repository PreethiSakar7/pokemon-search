{"version":3,"sources":["pages/main/MainPage.module.css","App.module.css","assets/images/Pokemon_logo.png","pages/detail/DetailModal.js","store/context.js","components/card/Card.js","pages/home/HomePage.js","pages/compare/ComparePage.js","components/header/Header.js","store/usePokemonStore.js","pages/main/MianPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DetailModal","props","className","src","pokemon","images","front_default","alt","width","height","back_default","front_shiny","back_shiny","order","types","map","name","idx","Badge","key","variant","species","weight","stats","val","stat","base_stat","ProgressBar","now","label","Context","createContext","isFav","isCompare","library","add","faHeart","faHeartSolit","PokeCard","useState","show","setShow","setPokemon","isLoading","setLoading","useContext","pokemonList","action","poke","setIsFav","useEffect","localStorage","setItem","JSON","stringify","onPokemonSelected","a","url","fetch","response","json","jsonRes","selectedItem","e","type","abilities","sprites","setTimeout","isDisable","onClick","isEditable","setVal","payload","icon","size","Form","Check","custom","value","id","onChange","onCompareClick","OverlayTrigger","placement","overlay","Tooltip","faInfoCircle","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Spinner","animation","HomePage","selected","setSelected","showFav","useRef","displayList","setDisplayList","compareList","setCompareList","firstArray","slice","length","console","log","maintainCompareList","checked","filter","item","Container","fluid","ref","current","result","query","target","includes","placeholder","Button","href","disabled","style","opacity","marginLeft","history","push","index","ComparePage","fromPoke","setFromPoke","ToPoke","setToPoke","match","params","split","from","to","getPoke","then","data","origin","logoUrl","usePokemonState","favourt","setPokemonList","MainPage","state","getAllPokeman","localPokemonList","parse","getItem","results","forEach","urlSplit","num","gridContainer","Provider","header","pages","exact","path","component","App","backgorundLayout","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.916171dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"MainPage_gridContainer__2Yrum\",\"header\":\"MainPage_header__1vZ1e\",\"pages\":\"MainPage_pages__Vidtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ZDdtO\",\"backgorundLayout\":\"App_backgorundLayout__1V6wH\"};","module.exports = __webpack_public_path__ + \"static/media/Pokemon_logo.f234edf1.png\";","import React from 'react'\n\nimport { Badge, ProgressBar} from 'react-bootstrap';\n\n\nfunction DetailModal(props) {\n\n    \n    const getStatsDisply = (stat) => {\n        \n        if(stat.base_stat <= 30) {\n            return <ProgressBar variant=\"danger\" now={stat.base_stat} label={stat.base_stat} />\n        } else if (stat.base_stat > 30 && stat.base_stat <= 60) {\n            return <ProgressBar variant=\"warning\" now={stat.base_stat} label={stat.base_stat}/>\n        } else if (stat.base_stat > 60) {\n            return <ProgressBar variant=\"success\" now={stat.base_stat} label={stat.base_stat}/>\n        }\n    }\n\n    return (\n\n                        <div className=\"detail-display\">\n                        <div className=\"image-area\">\n                            <div className=\"image-normal\">\n                                <span>NORMAL</span>\n                                <img src={props.pokemon?.images?.front_default} alt=\"fornt\" width=\"96\" height=\"96\" />\n                                <img src={props.pokemon?.images?.back_default} alt=\"back\" width=\"96\" height=\"96\"/>\n                            </div>\n                            <div className=\"image-normal\">\n                                <span>SHINE</span>\n                                <img src={props.pokemon?.images?.front_shiny} alt=\"shine-fornt\" width=\"96\" height=\"96\"/>\n                                <img src={props.pokemon?.images?.back_shiny} alt=\"shine-back\" width=\"96\" height=\"96\"/>\n                            </div>\n                        </div>\n                        {/* <div className=\"content-area\"> */}\n                            <div className=\"base-area\">\n                                <h4>BASE</h4>\n                                <div className=\"base-card\">\n                                    <label>Order</label>\n                                    <span>{props.pokemon?.order}</span>\n                                </div>\n                                <div className=\"base-card\">\n                                    <label>Type</label>\n                                    <span>\n                                    {props.pokemon?.types?.map((name, idx) => {\n                                        return <Badge key={idx} variant=\"primary\">{name}</Badge>\n                                    })\n                                    }\n                                    </span>\n                                </div>\n                                <div className=\"base-card\">\n                                    <label>species</label>\n                                    <span>{props.pokemon?.species}</span>\n                                </div>\n                                <div className=\"base-card\">\n                                    <label>height</label>\n                                    <span>{props.pokemon?.height}</span>\n                                </div>\n                                <div className=\"base-card\">\n                                    <label>weight</label>\n                                    <span>{props.pokemon?.weight}</span>\n                                </div>\n                                <div className=\"base-card\">\n                                    <label>Order</label>\n                                    <span>{props.pokemon?.order}</span>\n                                </div>\n                            </div>\n                            <div className=\"stat-area\">\n                                <h4>STAT</h4>\n                                {\n                                    props.pokemon?.stats?.map( (val, idx) => {\n                                        return <div key={idx}>\n                                            <span>\n                                                {val.stat.name} \n                                            </span>\n                                            <span>\n                                                { getStatsDisply(val)}\n                                            </span>\n                                        </div>\n                                    })\n                                }\n                            </div>\n                    </div>\n    );\n}\n\nexport default DetailModal;","import {createContext} from 'react'\n\nconst Context = createContext({\n    name: null,\n    isFav: false,\n    isCompare: false\n});\n\nexport default Context;","import React, { useState, useContext, useEffect } from 'react'\n\nimport './card.css'\nimport DetailModal from '../../pages/detail/DetailModal'\n\nimport { Modal, Spinner, OverlayTrigger, Tooltip, Form } from 'react-bootstrap';\nimport Context from '../../store/context';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    faHeart\n} from '@fortawesome/free-regular-svg-icons';\nimport {\n    faHeart as faHeartSolit,\n    faInfoCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    faHeart,\n    faHeartSolit\n);\n\nfunction PokeCard(props) {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [pokemon, setPokemon] = useState({});\n\n    const [isLoading, setLoading] = useState(false);\n\n    const { pokemonList, action } = useContext(Context);\n\n    const [isFav, setIsFav] = useState(props.poke.isFav);\n\n    useEffect(() => {\n        setIsFav(props.poke.isFav);\n        localStorage.setItem('pokemonList', JSON.stringify(pokemonList));\n    }, [props.poke.isFav]);\n\n    const onPokemonSelected = async () => {\n        // get the selected pokemon\n        if (props.poke.name) {\n            handleShow();\n            setLoading(true);\n\n            const url = 'https://pokeapi.co/api/v2/pokemon/' + props.poke.name;\n            const response = await fetch(url);\n            const jsonRes = await response.json();\n            const selectedItem = {\n                name: jsonRes.name,\n                order: jsonRes.order,\n                types: jsonRes.types.map(e => e.type.name),\n                species: jsonRes.species.name,\n                height: jsonRes.height,\n                weight: jsonRes.weight,\n                abilities: jsonRes.abilities,\n                images: jsonRes.sprites,\n                stats: jsonRes.stats\n            }\n            setPokemon({ ...selectedItem });\n            setTimeout(() => {\n                setLoading(false);\n            }, 800)\n\n        }\n    }\n\n    const setFav = () => {\n        if (props.isEditable) {\n            let setVal = !props.poke.isFav;\n            action({ type: 'SET_FAV', payload: props.poke.name });\n            setIsFav(setVal);\n        }\n    }\n\n    const compareStats = () => {\n\n        action({ type: 'SET_COMPARE', payload: props.poke.name });\n        props.onCompareClick(props.poke.isCompare, props.poke.name)\n    }\n\n    return (\n        <>\n            <div className={`card ${props.isDisable ? 'disableCard' : ''} ${props.poke.isCompare ? 'selectedCard' : ''}`}>\n                <div className=\"header-card\">\n                    <span className=\"icon-holder\" onClick={setFav}>\n                        {isFav ?\n                            <FontAwesomeIcon icon={faHeartSolit} className=\"fav-icon\" size=\"lg\" /> :\n                            <FontAwesomeIcon icon={faHeart} className=\"fav-icon\" size=\"lg\" />\n                        }\n                    </span>\n                    <span key=\"custom-checkbox\" className=\"compare-check\">\n                        <Form.Check\n                            custom\n                            value={props.poke.isCompare}\n                            type=\"checkbox\"\n                            id={props.poke.id}\n                            label=\" \"\n                            onChange={compareStats}\n                        />\n                    </span>\n                </div>\n                <div className=\"card-image\">\n                    <img src={`https://pokeres.bastionbot.org/images/pokemon/${props.poke.id}.png`} alt=\"pokeman\"></img>\n                </div>\n                <div className=\"card-footer\" onClick={onPokemonSelected}>\n                    <div className=\"card-footer-name\">{props.poke.name}</div>\n                    <OverlayTrigger\n                        key=\"bottom\"\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id={`tooltip-bottom`}>\n                                click to view detail.\n                        </Tooltip>\n                        }\n                    >\n                        <FontAwesomeIcon icon={faInfoCircle} className=\"info-icon\" size=\"lg\" />\n                    </OverlayTrigger>\n                </div>\n            </div>\n            <Modal show={show} onHide={handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header className=\"modal-header\" closeButton>\n                    <Modal.Title >\n                        {isFav ?\n                            <FontAwesomeIcon icon={faHeartSolit} className=\"fav-icon secondary-cl\" /> :\n                            <FontAwesomeIcon icon={faHeart} className=\"fav-icon secondary-cl\" />\n                        }\n                        {props.poke.name}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {\n                        isLoading ?\n                            <div className=\"spinerClass\">\n                                <Spinner animation=\"grow\" variant=\"danger\" />\n                            </div> :\n                            <DetailModal pokemon={pokemon} ></DetailModal>\n                    }\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default PokeCard;","import React, { useState, useContext, useEffect, useRef } from 'react';\n\nimport './homePage.css'\n//lib\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Button, Container, Form } from 'react-bootstrap';\n\nimport PokeCard from '../../components/card/Card'\n\nimport Context from '../../store/context';\n\nfunction HomePage(props) {\n\n    const [selected, setSelected] = useState([]);\n    const showFav = useRef();\n   // let compareList = useRef();\n   \n    const { pokemonList, action } = useContext(Context);\n    const [displayList, setDisplayList] = useState([]);\n    const [compareList, setCompareList] = useState([]);\n\n    useEffect(() => {\n        let firstArray = pokemonList.slice(0, 200);\n        setDisplayList([...firstArray]);\n    }, [pokemonList.length]);\n\n    useEffect( () => {\n        console.log(compareList);\n        // setCompareList([...compareList, selectedName.current]);\n    }, [compareList])\n\n    const showOnlyFav = () => {\n       if (showFav.current.checked) {\n            let result = pokemonList.filter(poke => poke.isFav === true);\n            setDisplayList([...result.slice(0, 200)]);\n       } else {\n           let firstArray = pokemonList.slice(0, 200)\n        setDisplayList([...firstArray]);\n       }\n    }\n\n    const maintainCompareList = (checked, name) => {\n        if (checked) {\n            setCompareList([...compareList, name]);\n        } else {\n            setCompareList(compareList.filter(item => item !== name));\n        }\n        console.log(compareList);\n    }\n\n    const goToCompare = () => {\n        console.log('test');\n        props.history.push(`/compare/${compareList}`)\n    }\n\n    return (\n        <Container fluid>\n            <div className=\"search-bar\">\n            <div className=\"switch-fav\">\n            <Form.Check \n                ref={showFav}\n                type=\"switch\"\n                id=\"custom-switch\"\n                label=\"Show Favourites\"\n                onChange={showOnlyFav}\n            />  \n            </div>\n                <input\n                    value={selected}\n                    onChange={(e) => {\n                        let query = e.target.value;\n                        setSelected(query);\n                        let result = pokemonList.filter(poke => {\n                            return poke.name.includes(query)\n                        });\n                        setDisplayList([...result.slice(0, 200)]);\n                    }}\n                    placeholder=\"Search\"\n                    className=\"form-control search-input\"\n                ></input>\n                <Button href=\"#\" variant=\"warning\" \n                disabled={!(compareList.length === 2)}\n                style={ {opacity : compareList.length !== 2 ? '0.5' : '1', marginLeft: '20px'} }\n                onClick={goToCompare}>Compare</Button>\n            </div>\n            <div className=\"card-view\">\n                {\n                    displayList.map((val, index) => {\n                        return <PokeCard \n                        key={index}\n                        poke={val}\n                        isDisable={compareList.length === 2 && !val.isCompare}\n                        isEditable={!showFav.current.checked} \n                        onCompareClick={maintainCompareList}></PokeCard>\n                    })\n                }\n            </div>\n        </Container>\n    );\n}\n\nexport default HomePage;","import React, { useEffect, useState } from 'react'\nimport { Button, Container } from 'react-bootstrap';\nimport './comparePage.css'\n\nfunction ComparePage(props) {\n\n    const [fromPoke, setFromPoke] = useState({});\n    const [ToPoke, setToPoke] = useState({});\n\n    useEffect(() => {\n        const [from, to] = props.match.params.compareList.split(',');\n\n        setFromPoke(getPoke(to));\n        getPoke(from).then(\n            (data) => {\n                console.log(data);\n                setFromPoke(data);\n                console.log(fromPoke);\n            }\n        );\n        getPoke(to).then(\n            (data) => {\n                console.log(data);\n                setToPoke(data);\n                console.log(ToPoke);\n            }\n        );\n    }, []);\n\n    const getPoke = async (name) => {\n        const url = 'https://pokeapi.co/api/v2/pokemon/' + name;\n        const response = await fetch(url);\n        const jsonRes = await response.json();\n        console.log(origin)\n        const selectedItem = {\n            name: jsonRes.name,\n            id: jsonRes.id,\n            order: jsonRes.order,\n            types: jsonRes.types.map(e => e.type.name),\n            species: jsonRes.species.name,\n            height: jsonRes.height,\n            weight: jsonRes.weight,\n            abilities: jsonRes.abilities,\n            images: jsonRes.sprites,\n            stats: jsonRes.stats\n        }\n        return selectedItem;\n    }\n\n\n    return (\n        <Container fluid className=\"compare-layout\">\n            <div className=\"compare-header\">\n            <Button href=\"/pokemon-search\" variant=\"warning\" \n                >Go Home</Button>\n\n            </div>\n            <div className=\"compare-area\">\n                <div className=\"content\">\n                    <span>\n                        \n                    </span>\n                    <span className=\"header-col\">\n                        <span>\n                            {fromPoke?.name}\n                        </span>\n                        <span>\n                            <img src={`https://pokeres.bastionbot.org/images/pokemon/${fromPoke?.id}.png`} alt=\"poker\"></img>\n                        </span>\n                    </span>\n                    <span className=\"header-col\">\n                        <span>\n                            {ToPoke?.name}\n                        </span>\n                        <span>\n                            <img src={`https://pokeres.bastionbot.org/images/pokemon/${ToPoke?.id}.png`} alt=\"poker\"></img>\n                        </span>\n                    </span>\n                </div>\n                {\n                    fromPoke?.stats?.map((val, idx) => {\n                        return <div className=\"content\" key={idx}>\n                            <span className=\"row-header\">\n                                {val.stat.name}\n                            </span>\n                            <span>\n                                {val.base_stat}\n                            </span>\n                            <span>\n                                {`${ToPoke?.stats?.[idx]?.base_stat}`}\n                            </span>\n                        </div>\n                    })\n                }\n            </div>\n        </Container>\n    );\n}\n\nexport default ComparePage;","import React, { Fragment } from 'react'\n\nimport './Header.css'\n\nimport logoUrl from '../../assets/images/Pokemon_logo.png'\nfunction Header() {\n    return (\n        <Fragment>\n            <section className=\"header-layout\">\n                <div>\n                    <img src={logoUrl} className=\"logo-img\" alt=\"\" />\n                </div>\n                <div className=\"user-text\">Welcome Guest!!</div>\n            </section>\n        </Fragment>\n    );\n}\n\nexport default Header;","import {useState} from 'react'\n\nconst usePokemonState = () => {\n    const [pokemonList, setPokemonList] = useState([{name: 'loading...', favourt: 'false'}]);\n\n    const action = (action) => {\n        const {type, payload} = action;\n\n        switch(type) {\n            case 'SET_POKEMON_LIST' :\n                return setPokemonList( () => [...payload]);\n            case 'SET_FAV' :\n                return pokemonList.map(poke => {\n                    if(poke.name === payload) {\n                      poke.isFav = !poke.isFav;\n                    }\n                    return poke;\n                  });\n            case 'SET_COMPARE':\n                return pokemonList.map(poke => {\n                    if (poke.name === payload) {\n                        poke.isCompare = !poke.isCompare;\n                    }\n                    return poke;\n                });\n            default:\n                return pokemonList;\n        }\n    }\n    return {pokemonList, action}\n}\n\nexport default usePokemonState;","import React, { Fragment, useEffect } from 'react'\nimport style from \"./MainPage.module.css\";\n\nimport { Switch, Route, BrowserRouter as Router, Link} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import for pages\nimport HomePage from '../home/HomePage'\nimport ComparePage from '../compare/ComparePage'\n\n// import components\nimport Header from '../../components/header/Header'\n\nimport Context from '../../store/context';\nimport usePokemonState from '../../store/usePokemonStore';\n\nfunction MainPage() {\n\n  const state = usePokemonState();\n  // const [ state , dispatch ] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    getAllPokeman();\n  }, [state.pokemonList.length === 0]);\n\n  const getAllPokeman = async () => {\n    let localPokemonList = JSON.parse(localStorage.getItem('pokemonList'));\n    if (!localPokemonList) {\n      const url = 'https://pokeapi.co/api/v2/pokemon/?offset=0&limit=1000';\n      const response = await fetch(url);\n      const jsonRes = await response.json();\n      jsonRes.results.forEach( type => {\n        const urlSplit = type.url.split('/');\n        let num = urlSplit[urlSplit.length -2];\n        type['id'] = num;\n        type['isFav'] = false;\n        type['isCompare'] = false;\n      });\n      state.action({type:'SET_POKEMON_LIST', payload: jsonRes.results });\n      localStorage.setItem('pokemonList', JSON.stringify(jsonRes.results));\n    } else {\n      state.action({type:'SET_POKEMON_LIST', payload: localPokemonList });\n    }\n  }\n    return (\n        <Fragment>\n        <div className={style.gridContainer}>\n          <Router>\n          <Context.Provider value={ state } >\n            <div className={style.header}>\n              <Header />\n            </div>\n            <div className={style.pages}>\n              <Switch>\n                <Route exact path=\"/\" component={HomePage}/>\n                <Route path=\"/compare/:compareList\" component={ComparePage} />\n              </Switch>\n            </div>\n            </Context.Provider>\n          </Router>\n        </div>\n      </Fragment>\n    );\n}\n\nexport default MainPage;","import React, { Fragment }  from 'react';\nimport style from './App.module.css';\n\nimport MainPage from './pages/main/MianPage'\n\nfunction App() {\n  return (\n    <Fragment>\n      <div className={style.backgorundLayout}></div>\n      <MainPage></MainPage>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}